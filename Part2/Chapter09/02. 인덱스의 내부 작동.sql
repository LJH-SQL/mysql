/*
B-Tree(Balanced Tree, 균형 트리)
B-Tree 는 균형잡힌 데이터 구조이다
노드란 트리 구조에서 데이터가 존재하는 공간 즉 갈라지는 부분의 '마디'를 뜻한다.
루트 노드 : 가장 상위의 노드
리프 노드 : 가장 마지막에 존재하는 노드
중간 노드 : 루트노드와 리프노드 사이의 노드들
B-Tree구조는 SELECT 구문을 사용할 때 뛰어난 성능을 발휘하며 훨씬 많은 양의 데이터의 경우 효용성이 기하급수적으로 커진다.
따라서 인덱스를 구성하면 SELECT의 속도가 급격히 향상될 수 있다는 것을 뜻하고 INSERT, UPDATE, DELETE시에 성능이 나빠질 수 있다.

클러스터형 인덱스 특징
- 클러스터형 인덱스의 생성 시에는 데이터 페이지 전체가 다시 정렬된다. 그러므로 이미 대용량 데이터가 입력된 상태라면 신각한 시스템 부하를 줄 수 있다.
- 인덱스 자체의 리프 페이지가 곧 데이터이다. 그러므로, 인덱스 자체에 데이터가 포함되어 있다 볼 수 있다.
- 보조 인덱스보다 검색속도는 더 빠르다 하지만 입력 수정 삭제는 더 느리다.
- 성능이 좋지만 테이블에 한개만 생성 가능하다
보조 인덱스 특징
- 데이터 페이지는 그냥 둔 상태에서 별도의 페이지에 딘덱스를 구헝ㅎ나다.
- 인덱스 자체의 리프 페이지는 데이터가 아니라 데이터가 위치하는 주소값(RID)이다. 클러스터형보다 검색속도는 느리지만 입력/수정/삭제는 덜 느리다.
- 보조인덱스는 여러개 생성가능하지만 함부로 남용할 경우 시스템 성능을 떨어뜨리는 결과를 초래할 수 있다.
*/